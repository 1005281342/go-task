// Code generated by goctl. DO NOT EDIT!
// Source: sendmessage.proto

package rpc

import (
	"context"

	"github.com/1005281342/go-task/sendmessage/sendmessage"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Message  = sendmessage.Message
	Receiver = sendmessage.Receiver
	SendReq  = sendmessage.SendReq
	SendRsp  = sendmessage.SendRsp
	Sender   = sendmessage.Sender

	Rpc interface {
		Send(ctx context.Context, in *SendReq, opts ...grpc.CallOption) (*SendRsp, error)
	}

	defaultRpc struct {
		cli zrpc.Client
	}
)

func NewRpc(cli zrpc.Client) Rpc {
	return &defaultRpc{
		cli: cli,
	}
}

func (m *defaultRpc) Send(ctx context.Context, in *SendReq, opts ...grpc.CallOption) (*SendRsp, error) {
	client := sendmessage.NewRpcClient(m.cli.Conn())
	return client.Send(ctx, in, opts...)
}
